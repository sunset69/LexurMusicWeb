<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.lexur.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="cc.lexur.pojo.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="genre_id" jdbcType="INTEGER" property="genreId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="poster" jdbcType="VARCHAR" property="poster" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="collection" jdbcType="BIGINT" property="collection" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="offline_time" jdbcType="TIMESTAMP" property="offlineTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, genre_id, admin_id, title, language, source, poster, author, collection, status, 
    publish_time, offline_time, create_time
  </sql>
  <select id="selectByExample" parameterType="cc.lexur.pojo.SongExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.lexur.pojo.SongExample">
    delete from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.lexur.pojo.Song">
    insert into song (id, genre_id, admin_id, 
      title, language, source, 
      poster, author, collection, 
      status, publish_time, offline_time, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{genreId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{poster,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{collection,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP}, #{offlineTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cc.lexur.pojo.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="genreId != null">
        genre_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="poster != null">
        poster,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="offlineTime != null">
        offline_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="genreId != null">
        #{genreId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        #{poster,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.lexur.pojo.SongExample" resultType="java.lang.Long">
    select count(*) from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update song
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.genreId != null">
        genre_id = #{record.genreId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.poster != null">
        poster = #{record.poster,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.collection != null">
        collection = #{record.collection,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offlineTime != null">
        offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update song
    set id = #{record.id,jdbcType=INTEGER},
      genre_id = #{record.genreId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      poster = #{record.poster,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      collection = #{record.collection,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.lexur.pojo.Song">
    update song
    <set>
      <if test="genreId != null">
        genre_id = #{genreId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        poster = #{poster,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.lexur.pojo.Song">
    update song
    set genre_id = #{genreId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      poster = #{poster,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      collection = #{collection,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cc.lexur.pojo.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="genre_id" jdbcType="INTEGER" property="genreId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="poster" jdbcType="VARCHAR" property="poster" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="collection" jdbcType="BIGINT" property="collection" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="offline_time" jdbcType="TIMESTAMP" property="offlineTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, genre_id, admin_id, title, language, source, poster, author, collection, status, 
    publish_time, offline_time, create_time
  </sql>
  <select id="selectByExample" parameterType="cc.lexur.pojo.SongExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.lexur.pojo.SongExample">
    delete from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.lexur.pojo.Song">
    insert into song (id, genre_id, admin_id, 
      title, language, source, 
      poster, author, collection, 
      status, publish_time, offline_time, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{genreId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{poster,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{collection,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP}, #{offlineTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cc.lexur.pojo.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="genreId != null">
        genre_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="poster != null">
        poster,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="offlineTime != null">
        offline_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="genreId != null">
        #{genreId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        #{poster,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.lexur.pojo.SongExample" resultType="java.lang.Long">
    select count(*) from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update song
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.genreId != null">
        genre_id = #{record.genreId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.poster != null">
        poster = #{record.poster,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.collection != null">
        collection = #{record.collection,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offlineTime != null">
        offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update song
    set id = #{record.id,jdbcType=INTEGER},
      genre_id = #{record.genreId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      poster = #{record.poster,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      collection = #{record.collection,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.lexur.pojo.Song">
    update song
    <set>
      <if test="genreId != null">
        genre_id = #{genreId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        poster = #{poster,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offlineTime != null">
        offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.lexur.pojo.Song">
    update song
    set genre_id = #{genreId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      poster = #{poster,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      collection = #{collection,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      offline_time = #{offlineTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>